<UserControl
    x:Class="SuperKanban.View.AppRuleView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SuperKanban.View"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:SuperKanban.ViewModel"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
    Width="830"
    Height="500"
    d:DataContext="{d:DesignInstance viewModels:AppRuleViewModel}"

    mc:Ignorable="d">
    <Canvas x:Name="canvas">
        <TabControl
            x:Name="tabControl"
            Width="{Binding ActualWidth, ElementName=canvas, Mode=OneWay}"
            Height="{Binding ActualHeight, ElementName=canvas, Mode=OneWay}"
            Style="{StaticResource MaterialDesignNavigatilRailTabControl}">
            <TabItem
                Header="{materialDesign:PackIcon Kind=FormatListBulletedType,
                                                 Size=24}"
                Style="{StaticResource MaterialDesignNavigationRailTabItem}"
                ToolTip="规则设置"
                ToolTipService.HorizontalOffset="50"
                ToolTipService.VerticalOffset="-20">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="419*"/>
                        <RowDefinition Height="81*"/>
                    </Grid.RowDefinitions>
                    <Border BorderThickness="0,0,0,2">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFDDDDDD"/>
                        </Border.BorderBrush>
                        <DataGrid
                        Margin="1"
                        AutoGenerateColumns="False"
                        CanUserAddRows="False"
                        HeadersVisibility="Column"
                        ItemsSource="{Binding AppRule.AppRuleOneList}" Grid.RowSpan="2">
                            <!--<DataGrid.Resources>
                <domain:BindingProxy
      x:Key="DataContextProxy"
      Data="{Binding}" xmlns:domain="clr-namespace:MaterialDesignDemo.Domain" />
            </DataGrid.Resources>-->
                            <DataGrid.Columns>


                                <DataGridCheckBoxColumn
                                Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}">
                                    <DataGridCheckBoxColumn.Header>
                                        <Border Background="Transparent">
                                            <CheckBox />
                                            <!--  IsChecked="{Binding Data.IsAllItems1Selected, Source={StaticResource DataContextProxy}}"  -->

                                        </Border>
                                    </DataGridCheckBoxColumn.Header>
                                    <DataGridCheckBoxColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridCheckBoxColumn.HeaderStyle>
                                </DataGridCheckBoxColumn>
                                <materialDesign:DataGridTextColumn
                                Width="130"
                                Binding="{Binding Code}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                Header="CODE">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock
                                                        Text="{Binding}"
                                                        TextAlignment="Left"
                                                        TextWrapping="Wrap" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}" TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </materialDesign:DataGridTextColumn>
                                <DataGridTextColumn
                                Width="120*"
                                Binding="{Binding Title}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                Header="标题" />
                                <!--  if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn  -->
                                <DataGridTextColumn
                                Width="120*"
                                Binding="{Binding Path}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                Header="路径">
                                    <!--<materialDesign:DataGridTextColumn.Binding>
                        <Binding
          Path="Name">
                                -->
                                    <!--<Binding.ValidationRules>
                                <domain:NotEmptyValidationRule xmlns:domain="clr-namespace:MaterialDesignDemo.Domain" />
                            </Binding.ValidationRules>-->
                                    <!--
                        </Binding>
                    </materialDesign:DataGridTextColumn.Binding>-->
                                </DataGridTextColumn>
                                <!--  set a max length to get an indicator in the editor  -->
                                <DataGridTextColumn
                                Width="120*"
                                Binding="{Binding Url}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                Header="网址">
                                    <!--<DataGridTextColumn.Binding>
                        <Binding
          Path="Description">
                            <Binding.ValidationRules>
                                <domain:NotEmptyValidationRule xmlns:domain="clr-namespace:MaterialDesignDemo.Domain" />
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>-->
                                </DataGridTextColumn>
                                <materialDesign:DataGridTextColumn
                                Width="120*"
                                Binding="{Binding Info}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                Header="文件信息"
                                >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock
                                                        Text="{Binding}"
                                                        TextAlignment="Left"
                                                        TextWrapping="Wrap" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}" TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </materialDesign:DataGridTextColumn>
                                <!--  use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo  -->

                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                    <Button
                        Margin="16,10,0,0"
                        Command="{Binding AddAppRuleOneCommand}"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        ToolTip="MaterialDesignFlatButton" Grid.Row="1" HorizontalAlignment="Left" Width="48" Height="32" VerticalAlignment="Top">
                        <materialDesign:PackIcon Kind="Plus" Opacity="0.8" />
                    </Button>
                </Grid>
            </TabItem>
            <TabItem
                Header="{materialDesign:PackIcon Kind=Timetable,
                                                 Size=24}"
                Style="{StaticResource MaterialDesignNavigationRailTabItem}"
                ToolTip="时间设置"
                ToolTipService.HorizontalOffset="50"
                ToolTipService.VerticalOffset="-20">
                <local:AccrTimeSelectorView DataContext="{Binding AccrTimeSelectorViewModel}"></local:AccrTimeSelectorView>

            </TabItem>
        </TabControl>
        <Button
            Canvas.Left="10"
            Canvas.Bottom="10"
            Command="{x:Static wpf:DialogHost.CloseDialogCommand}"
            Style="{StaticResource MaterialDesignIconForegroundButton}"
            ToolTip="保存并返回">
            <materialDesign:PackIcon Kind="ArrowLeftThick" Opacity="0.8" />
        </Button>
    </Canvas>
</UserControl>
