<UserControl
    x:Class="SuperKanban.View.AccrTimeSelectorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:SuperKanban.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SuperKanban.View"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:spmodel="clr-namespace:SuperKanban.Model.Entities"
    xmlns:viewModels="clr-namespace:SuperKanban.ViewModel"
    x:Name="userControl"
    d:DataContext="{d:DesignInstance viewModels:AccrTimeSelectorViewModel}"
    d:Height="500"
    d:Width="760"
    mc:Ignorable="d">

    <UserControl.DataContext>
        <viewModels:AccrTimeSelectorViewModel />
    </UserControl.DataContext>

    <UserControl.Resources>
        <converters:TimeToWidthConverter x:Key="TimeToWidthConverter" />
        <converters:DateToHeightConverter x:Key="DateToHeightConverter" />
        <converters:LimitTypeToValueConverter x:Key="LimitTypeToValueConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />


        <Border
            x:Key="img1"
            Width="30"
            Height="30"
            Background="White">
            <Rectangle Margin="1" Fill="#FFCCC9C9" />
        </Border>
    </UserControl.Resources>
    <StackPanel HorizontalAlignment="Stretch" Background="White">
        <DockPanel HorizontalAlignment="Left" VerticalAlignment="Top">
            <Grid
                Width="{Binding Width, ElementName=itemsControl}"
                Height="32"
                Margin="32,0,0,0"
                HorizontalAlignment="Left"
                Background="White"
                DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Label
                    Margin="3,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Content="上午" />
                <Label
                    Grid.Column="1"
                    Margin="3,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Content="下午" />
            </Grid>
            <Grid
                Width="32"
                Height="{Binding Height, ElementName=itemsControl}"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="White"
                DockPanel.Dock="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <Label
                    Margin="0,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="一" />
                <Label
                    Grid.Row="1"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="二" />
                <Label
                    Grid.Row="2"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="三" />
                <Label
                    Grid.Row="3"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="四" />
                <Label
                    Grid.Row="4"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="五" />
                <Label
                    Grid.Row="5"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="六" />
                <Label
                    Grid.Row="6"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="日" />
            </Grid>
            <ItemsControl
                x:Name="itemsControl"
                Width="720"
                Height="210"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                DockPanel.Dock="Top"
                ItemsSource="{Binding TimeLimit.TimeRuleOneList}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas
                            x:Name="dwdwqd"
                            MouseLeftButtonDown="ItemsControl_MouseDown"
                            MouseLeftButtonUp="ItemsControl_MouseLeftButtonUp"
                            MouseMove="ItemsControl_MouseMove">
                            <Canvas.Background>
                                <VisualBrush
                                    TileMode="Tile"
                                    Viewport="0,0,30,30"
                                    ViewportUnits="Absolute"
                                    Visual="{StaticResource img1}" />
                            </Canvas.Background>
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding Path=TimeRange, ConverterParameter=-1, Converter={StaticResource TimeToWidthConverter}}" />
                        <Setter Property="Canvas.Top" Value="{Binding Path=DateRange, ConverterParameter=-1, Converter={StaticResource DateToHeightConverter}}" />

                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Rectangle
                            Width="{Binding Path=TimeRange, Mode=TwoWay, ConverterParameter=0, Converter={StaticResource TimeToWidthConverter}}"
                            Height="{Binding Path=DateRange, Mode=TwoWay, ConverterParameter=0, Converter={StaticResource DateToHeightConverter}}"
                            Fill="{Binding Path=LimitType, Converter={StaticResource LimitTypeToValueConverter}, Mode=TwoWay}"
                            RadiusX="2"
                            RadiusY="2"
                            Visibility="{Binding Enable, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>
            <!--  the following based on https://material.io/guidelines/components/buttons.html#buttons-toggle-buttons  -->
            <StackPanel
                x:Name="brushchoice"
                Margin="0,10,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                DockPanel.Dock="Left"
                Orientation="Horizontal">
                <materialDesign:Chip
                    x:Name="chip_allow"
                    Margin="10,0,5,0"
                    Background="#888B8B8B"
                    Click="Chip_Click"
                    Content="Allow"
                    Cursor="Hand"
                    IconBackground="#008B8B8B">
                    <materialDesign:Chip.Icon>
                        <materialDesign:PackIcon Kind="CheckUnderline" />
                    </materialDesign:Chip.Icon>
                    <materialDesign:Chip.Style>
                        <Style TargetType="materialDesign:Chip">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentType}" Value="Allow">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="beginstoryname1">
                                            <Storyboard x:Name="storyname1">
                                                <ColorAnimation
                                                    BeginTime="0:0:0"
                                                    Storyboard.TargetProperty="IconBackground.Color"
                                                    To="#ff8B8B8B"
                                                    Duration="0:0:0.3" />
                                                <ColorAnimation
                                                    BeginTime="0:0:0"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    To="#128B8B8B"
                                                    Duration="0:0:0.3" />

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="beginstoryname1" />
                                    </DataTrigger.ExitActions>

                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </materialDesign:Chip.Style>
                </materialDesign:Chip>
                <materialDesign:Chip
                    x:Name="chip_block"
                    Margin="10,0,5,0"
                    Background="#77E04646"
                    Click="Chip_Click"
                    Content="Block"
                    Cursor="Hand"
                    IconBackground="#00E04646">
                    <materialDesign:Chip.Style>
                        <Style TargetType="materialDesign:Chip">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentType}" Value="Block">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="beginstoryname2">
                                            <Storyboard x:Name="storyname2">
                                                <ColorAnimation
                                                    BeginTime="0:0:0"
                                                    Storyboard.TargetProperty="IconBackground.Color"
                                                    To="#ffE04646"
                                                    Duration="0:0:0.3" />
                                                <ColorAnimation
                                                    BeginTime="0:0:0"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    To="#128B8B8B"
                                                    Duration="0:0:0.3" />

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="beginstoryname2" />
                                    </DataTrigger.ExitActions>

                                </DataTrigger>

                            </Style.Triggers>
                        </Style>

                    </materialDesign:Chip.Style>
                    <materialDesign:Chip.Icon>
                        <materialDesign:PackIcon Kind="BlockHelper" />
                    </materialDesign:Chip.Icon>

                </materialDesign:Chip>
                <materialDesign:Chip
                    x:Name="chip_limit"
                    Margin="10,0,5,0"
                    Background="#55FFCC00"
                    Click="Chip_Click"
                    Content="Limit"
                    Cursor="Hand"
                    Icon="L"
                    IconBackground="#00FFCC00">
                    <materialDesign:Chip.Style>
                        <Style TargetType="materialDesign:Chip">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentType}" Value="Limit">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="beginstoryname3">
                                            <Storyboard x:Name="storyname3">
                                                <ColorAnimation
                                                    BeginTime="0:0:0"
                                                    Storyboard.TargetProperty="IconBackground.Color"
                                                    To="#FFFFCC00"
                                                    Duration="0:0:0.3" />
                                                <ColorAnimation
                                                    BeginTime="0:0:0"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    To="#128B8B8B"
                                                    Duration="0:0:0.3" />

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="beginstoryname3" />
                                    </DataTrigger.ExitActions>

                                </DataTrigger>

                            </Style.Triggers>
                        </Style>

                    </materialDesign:Chip.Style>
                </materialDesign:Chip>
                <!--<RadioButton Content="足球" GroupName="brushtype"></RadioButton>-->
            </StackPanel>

            <Label
                Name="info_text"
                Height="32"
                Margin="220,10,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Center"
                d:Width="100"
                DockPanel.Dock="Left" />
        </DockPanel>
        <Grid Height="215" HorizontalAlignment="Stretch">
            <DataGrid
                Margin="0,5,0,0"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                HeadersVisibility="All"
                ItemsSource="{Binding TimeLimit.TimeRuleOneList}">
                <!--<DataGrid.Resources>
                <domain:BindingProxy
      x:Key="DataContextProxy"
      Data="{Binding}" xmlns:domain="clr-namespace:MaterialDesignDemo.Domain" />
            </DataGrid.Resources>-->
                <!--  Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"  -->

                <DataGrid.Columns>
                    <DataGridCheckBoxColumn EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <Border Background="Transparent">
                                <CheckBox />
                                <!--  IsChecked="{Binding Data.IsAllItems1Selected, Source={StaticResource DataContextProxy}}"  -->

                            </Border>
                        </DataGridCheckBoxColumn.Header>
                        <DataGridCheckBoxColumn.HeaderStyle>
                            <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridCheckBoxColumn.HeaderStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridTextColumn
                        Binding="{Binding TimeRange, Converter={StaticResource TimeToWidthConverter}, ConverterParameter=2}"
                        CanUserSort="True"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        Header="时间段"
                        IsReadOnly="True" />
                    <!--  if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn  -->
                    <DataGridTextColumn
                        Binding="{Binding DateRange, Converter={StaticResource DateToHeightConverter}, ConverterParameter=2}"
                        CanUserSort="True"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        Header="日期"
                        IsReadOnly="True">
                        <!--<materialDesign:DataGridTextColumn.Binding>
                        <Binding
          Path="Name">
                        -->
                        <!--<Binding.ValidationRules>
                                <domain:NotEmptyValidationRule xmlns:domain="clr-namespace:MaterialDesignDemo.Domain" />
                            </Binding.ValidationRules>-->
                        <!--
                        </Binding>
                    </materialDesign:DataGridTextColumn.Binding>-->
                    </DataGridTextColumn>
                    <!--  set a max length to get an indicator in the editor  -->

                    <!--  use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo  -->
                    <materialDesign:DataGridComboBoxColumn
                        x:Name="limittype_combobox"
                        Width="100"
                        Header="限制类型"
                        IsEditable="True"
                        DisplayMemberPath="Value"
                        SelectedValuePath="Key"
                        SelectedValueBinding="{Binding LimitType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        >
                        <!--Setting the editing element style allows access to all of the combo box's properties
                          <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                              <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                                  <Setter Property="IsEditable" Value="True" />
                              </Style>
                          </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                        -->
                    </materialDesign:DataGridComboBoxColumn>
          
                    <materialDesign:DataGridComboBoxColumn
                        Width="100"
                        Header="时长(分)"
                        IsEditable="True"
                        ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AccrTimeSelectorView}}, Path=DataContext.LimitTimes}"
                        SelectedValueBinding="{Binding Limitminiutes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <!--Setting the editing element style allows access to all of the combo box's properties
                          <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                              <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                                  <Setter Property="IsEditable" Value="True" />
                              </Style>
                          </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                        -->
                    </materialDesign:DataGridComboBoxColumn>

                    <DataGridTemplateColumn Width="100" Header="     激活">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ToggleButton
                                    IsChecked="{Binding Enable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                    ToolTip="MaterialDesignSwitchToggleButton with Content and ToggleButtonAssist.OnContent">
                                    <materialDesign:PackIcon Kind="EmoticonHappyOutline" RenderTransformOrigin=".5,.5">
                                        <materialDesign:PackIcon.RenderTransform>
                                            <RotateTransform Angle="180" />
                                        </materialDesign:PackIcon.RenderTransform>
                                    </materialDesign:PackIcon>
                                    <materialDesign:ToggleButtonAssist.OnContent>
                                        <materialDesign:PackIcon Kind="EmoticonHappy" />
                                    </materialDesign:ToggleButtonAssist.OnContent>
                                </ToggleButton>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>


                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>

        </Grid>
    </StackPanel>
</UserControl>
